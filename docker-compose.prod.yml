version: '3.7'

services:
  django-gunicorn:
    build: ./srpms
    volumes:
      - static_volume:/djangoproj/srpms/static
      - media_volume:/djangoproj/srpms/media
    env_file:
      - config.prod/db-postgres.env
      - config.prod/django-gunicorn.env
      - config.prod/general.env
    networks:
      - srpms_network
    depends_on:
      - db-postgres
    secrets:
      - postgres_db
      - postgres_user
      - postgres_passwd
      - django_secret_key

  # Copy the built front-end to volume and exit
  angular-client:
    build:
      context: .
      dockerfile: ./srpms-client/Dockerfile
      args:
        - DEBUG=False
    env_file:
      - config.prod/general.env
    volumes:
      - angular_volume:/dist
    network_mode: none

  nginx:
    build: ./nginx
    env_file:
      - config.prod/certbot.env
    ports:
      # Map host 80 to container 80
      - 80:80
      - 443:443
    volumes:
      # Ngnix configuration file
      - ./config.prod/nginx/conf.d:/etc/nginx/conf.d
      - angular_volume:/dist
      - static_volume:/djangoproj/srpms/static
      - media_volume:/djangoproj/srpms/media
      - letsencrypt_volume:/etc/letsencrypt
      - certbot_volume:/var/www/certbot
    networks:
      - srpms_network
    depends_on:
      - django-gunicorn
      - angular-client

  db-postgres:
    image: postgres:11.5-alpine
    volumes:
      - db_postgres_volume:/var/lib/postgresql/data
    env_file:
      - config.prod/db-postgres.env
    networks:
      - srpms_network
    secrets:
      - postgres_db
      - postgres_user
      - postgres_passwd
      - postgres_init_args

  # Manage Let's Encrypt SSL certificate
  #
  # Note that this container is not part of the srpms network, but
  # connect to the host in order to support docker-compose-in-docker.
  # By doing this we can renew certificate, and reload nginx within
  # this container.
  certbot:
    build: ./certbot
    env_file:
      - config.prod/certbot.env
      - config.prod/general.env
    volumes:
      - ./:/srpms
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt_volume:/etc/letsencrypt
      - certbot_volume:/var/www/certbot
    network_mode: host
    depends_on:
      - nginx

secrets:
  postgres_db:
    file: /srpms-secrets/postgres-db.txt
  postgres_user:
    file: /srpms-secrets/postgres-user.txt
  postgres_passwd:
    file: /srpms-secrets/postgres-passwd.txt
  postgres_init_args:
    file: /srpms-secrets/postgres-init-args.txt
  django_secret_key:
    file: /srpms-secrets/django_secret_key.txt

networks:
  srpms_network:

volumes:
  db_postgres_volume:
  angular_volume:
  static_volume:
  media_volume:
  letsencrypt_volume:
  certbot_volume:
