# declare upstream server, i.e. our Gunicorn application
upstream srpms_server {
    # docker will automatically resolve this to the correct address
    # because we use the same name as the service: "srpms-backend"
    # in the docker-compose file.
    server django-gunicorn:8000;
}

server {
    listen 80;
    server_name srpms.cecs.anu.edu.au;

    location / {
        return 301 https://$host$request_uri;
    }

    # Let's Encrypt challenge files
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# now we declare our main server
server {

    listen 443 ssl;
    server_name srpms.cecs.anu.edu.au;

    # location of SSL certificate
    ssl_certificate /etc/letsencrypt/live/srpms.cecs.anu.edu.au/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/srpms.cecs.anu.edu.au/privkey.pem;

    # include recommend security settings
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /static/ {
        try_files $uri $uri/;
        alias /djangoproj/srpms/static/;
    }

    location /media/ {
        try_files $uri $uri/;
        alias /djangoproj/srpms/media/;
    }

    location /api/ {
        try_files $uri $uri/;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $host;
        proxy_redirect off;

        if (!-f $request_filename) {
            proxy_pass http://srpms_server;
            break;
        }
    }
}